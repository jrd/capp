services:
  nginx:
    build:
      context: nginx
    container_name: nginx-proxy
    networks:
      - "network"
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    volumes:
      - type: volume
        source: nginx-conf
        target: /etc/nginx/conf.d
        read_only: true
      - type: volume
        source: nginx-html
        target: /usr/share/nginx/html
        read_only: true
      - type: volume
        source: vhosts
        target: /etc/nginx/vhost.d
        read_only: true
      - type: volume
        source: certs
        target: /etc/nginx/certs
        read_only: true
  gen:
    build:
      context: gen
      args:
        - DOCKER_GEN_VERSION=${DOCKER_GEN_VERSION}
    container_name: docker-gen
    environment:
      - "NGINX_PROXY_CONTAINER=nginx-proxy"
      - "DEFAULT_HOST=${DEFAULT_HOST}"
    networks:
      - "network"
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
      - type: volume
        source: vhosts
        target: /etc/nginx/vhost.d
        read_only: true
      - type: volume
        source: certs
        target: /etc/nginx/certs
        read_only: true
      - type: volume
        source: nginx-conf
        target: /etc/proxy-conf.d
        read_only: false
  le:
    build:
      context: le
      args:
        - DOCKER_GEN_VERSION=${DOCKER_GEN_VERSION}
    container_name: letsencrypt
    environment:
      - "NGINX_PROXY_CONTAINER=nginx-proxy"
      - "NGINX_DOCKER_GEN_CONTAINER=docker-gen"
      - "DEFAULT_EMAIL=${DEFAULT_EMAIL}"
      - "FILES_PERMS=644"
    networks:
      - "network"
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
      - type: volume
        source: certbot
        target: /etc/certbot
        read_only: false
      - type: volume
        source: nginx-conf
        target: /etc/nginx/conf.d
        read_only: false
      - type: volume
        source: nginx-html
        target: /usr/share/nginx/html
        read_only: false
      - type: volume
        source: vhosts
        target: /etc/nginx/vhost.d
        read_only: false
      - type: volume
        source: certs
        target: /etc/nginx/certs
        read_only: false
networks:
  "network":
volumes:
  "nginx-conf":
  "nginx-html":
  "certbot":
  "vhosts":
    external: true
  "certs":
    external: true
