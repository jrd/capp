.tag:
  stage: release
  when: manual
  rules:
    - if: $CI_COMMIT_BRANCH
  image:
    name: bitnami/git:latest
    pull_policy: ["always", "if-not-present"]
  before_script:
    - |
      mkdir -p ~/.ssh && chmod 700 ~/.ssh
      echo "StrictHostKeyChecking no" > ~/.ssh/config
      eval $(ssh-agent -s)
      git config user.name "${GITLAB_USER_NAME}"
      git config user.email "${GITLAB_USER_EMAIL}"
      git remote set-url origin git@${CI_SERVER_HOST}:${CI_PROJECT_PATH}.git
    - |
      if echo "${CI_JOB_NAME}" | grep -q ':'; then
        export VERSION_UPDATE=$(echo "${CI_JOB_NAME}"|cut -d: -f2)
      fi
  script:
    - |
      set -e
      [ -x ./project_version ]
      echo $VERSION_UPDATE update
      if ! echo "$VERSION_UPDATE" | grep -qE "^major|minor|patch$"; then echo "VERSION_UPDATE should be set to either major, minor or patch" >&2; exit 1; fi
      if [ ! -s "$DEPLOY_KEY_TO_TAG" ]; then
        echo "DEPLOY_KEY_TO_TAG should points to an ssh private key to push a tag in this repository" >&2
        exit 1
      fi
      (cat "$DEPLOY_KEY_TO_TAG" | tr -d "\r"; echo "") | ssh-add - >/dev/null
      ./.gitlab/make_new_release $VERSION_UPDATE
      VER=$(./project_version get)
      git push origin refs/tags/v$VER
      if [ "$CI_COMMIT_BRANCH" = "$CI_DEFAULT_BRANCH" ]; then git push -o ci.skip origin "HEAD:$CI_COMMIT_BRANCH"; fi
      echo "v$VER tagged and pushed"
