.security:
  stage: test
  rules:
    - if: $CI_COMMIT_BRANCH
  image:
    name: aquasec/trivy
    entrypoint: [""]
    pull_policy: ["always", "if-not-present"]
  variables:
    TRIVY_NO_PROGRESS: "true"
    TRIVY_EXIT_CODE: 1
    TRIVY_SEVERITY: "HIGH,CRITICAL"
    TRIVY_IGNORE_UNFIXED: "true"
    TRIVY_SCANNERS: "vuln"
    TRIVY_CACHE_DIR: "/trivycache/"
    TRIVY_DB_REPOSITORY: "public.ecr.aws/aquasecurity/trivy-db"
    TRIVY_JAVA_DB_REPOSITORY: "public.ecr.aws/aquasecurity/trivy-java-db"
  cache:
    paths:
      - /trivycache/
  before_script:
    - |
      some_time_ago=$(($(date +%s) - 2 * 86400))
      db_time=$(date -r "$TRIVY_CACHE_DIR/db/metadata.json" +%s 2>/dev/null || echo 0)
      java_db_time=$(date -r "$TRIVY_CACHE_DIR/java-db/metadata.json" +%s 2>/dev/null || echo 0)
      if [ $db_time -lt $some_time_ago ]; then
        trivy image --download-db-only || true
      fi
      if [ $java_db_time -lt $some_time_ago ]; then
        trivy image --download-java-db-only || true
      fi
  script:
    - 'trivy rootfs "$CI_PROJECT_DIR"'
